# version: '3.5'

services:
  db:
    image: mysql:5.7
    container_name: wordpress_db
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d/
    ports:
      - 3306:${DB_PORT}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_HOST=%
    networks:
      - wpsite

  wordpress:
    depends_on:
      - db
    # image: wordpress:latest
    # use dockerfile to add xdebug to initial image
    build:
      context: ./config/wordpress/
      dockerfile: dockerfile
    container_name: wordpress
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - ${APP_PORT}:80
    volumes:
      # wordpress files
      - ./skeletons/wordpress:/var/www/html
      - ./themes/:/var/www/html/wp-content/themes/
      - ./plugins:/var/www/html/wp-content/plugins
      - ./mu-plugins:/var/www/html/wp-content/mu-plugins

      # php & xdebug config files
      - ./config/php/conf.d/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./config/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./config/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ./logs/profiles:/logs/profiles
    environment:
      - WORDPRESS_DB_HOST=${DB_HOST}
      - WORDPRESS_DB_PORT=${DB_PORT}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DEBUG=${WORDPRESS_DEBUG}
      - WORDPRESS_CONFIG_EXTRA=${WORDPRESS_CONFIG_EXTRA}
      - XDEBUG_MODE=${XDEBUG_MODE}
    networks:
      - wpsite

  phpmyadmin:
    container_name: wordpress_phpmyadmin
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 5555:80
    networks:
      - wpsite

networks:
  wpsite:
volumes:
  db_data: